{"version":3,"sources":["../../src/api/index.js"],"names":["config","db","api","get","req","res","sendFile","__dirname","collection","find","_id","toArray","err","results","json","post","searchQuery","params","imgstr","offset","query","date","format","console","log","insert","name","then","resp","slicedResponse","splice","catch"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;kBAEe,gBAAoB;AAAA,KAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,KAATC,EAAS,QAATA,EAAS;;AAClC,KAAIC,MAAM,sBAAV;;AAEA;AACAA,KAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,QAAJ,CAAaC,YAAY,aAAzB;AACA,EAFD;AAGA;AACAL,KAAIC,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCJ,KAAGO,UAAH,CAAc,UAAd,EAA0BC,IAA1B,CAA+B,EAA/B,EAAkC,EAACC,KAAK,CAAN,EAAlC,EAA4CC,OAA5C,CAAoD,UAACC,GAAD,EAAKC,OAAL,EAAiB;AACpER,OAAIS,IAAJ,CAASD,OAAT;AACA,GAFD;AAGA;AACA,EALD;AAMA;AACAX,KAAIa,IAAJ,CAAS,iBAAT,EAA4B,UAACX,GAAD,EAAMC,GAAN,EAAc;AACzC,MAAMW,cAAcZ,IAAIa,MAAJ,CAAWC,MAA/B;AACA,MAAMC,SAASf,IAAIgB,KAAJ,CAAUD,MAAzB;AACA,MAAME,OAAO,wBAASC,MAAT,CAAgB,sBAAhB,CAAb;AACAC,UAAQC,GAAR,CAAYH,IAAZ;AACApB,KAAGO,UAAH,CAAc,UAAd,EAA0BiB,MAA1B,CAAiC,EAACC,MAAMV,WAAP,EAAmBK,UAAnB,EAAjC,EAA2D,UAACT,GAAD,EAAS;AACnE,OAAIA,GAAJ,EAAS;AACRP,QAAIS,IAAJ,CAAS,mBAAT;AACA;AACD,0CAAoBE,WAApB,EACCW,IADD,CACM,UAACC,IAAD,EAAU;AACf,QAAMC,iBAAiBV,SAASS,KAAKE,MAAL,CAAY,CAAZ,EAAcX,MAAd,CAAT,GAAiCS,IAAxD;AACAvB,QAAIS,IAAJ,CAASe,cAAT;AACA,IAJD,EAKCE,KALD,CAKO,UAACnB,GAAD,EAAS;AAACP,QAAIS,IAAJ,CAAS,EAACF,QAAD,EAAT;AAAgB,IALjC;AAMA,GAVD;AAWA,EAhBD;;AAkBA,QAAOV,GAAP;AACA,C","file":"index.js","sourcesContent":["import { Router } from 'express';\r\nimport moment from 'moment';\r\nimport {searchImageByString} from './image_search';\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router();\r\n\r\n\t// get index page\r\n\tapi.get('/', (req, res) => {\r\n\t\tres.sendFile(__dirname + '/index.html')\r\n\t});\r\n\t// get all searches\r\n\tapi.get('/searches', (req, res) => {\r\n\t\tdb.collection('searches').find({},{_id: 0}).toArray((err,results) => {\r\n\t\t\tres.json(results)\r\n\t\t})\r\n\t\t// res.json({message: db})\r\n\t})\r\n\t// search for another image and add to searches collection\r\n\tapi.post('/search/:imgstr', (req, res) => {\r\n\t\tconst searchQuery = req.params.imgstr\r\n\t\tconst offset = req.query.offset\r\n\t\tconst date = moment().format('DD-MM-YYYY, HH:MM:SS')\r\n\t\tconsole.log(date);\r\n\t\tdb.collection('searches').insert({name: searchQuery,date}, (err) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tres.json('error saving data')\r\n\t\t\t}\r\n\t\t\tsearchImageByString(searchQuery)\r\n\t\t\t.then((resp) => {\r\n\t\t\t\tconst slicedResponse = offset ? resp.splice(0,offset) : resp\r\n\t\t\t\tres.json(slicedResponse)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {res.json({err})})\r\n\t\t})\r\n\t})\r\n\r\n\treturn api;\r\n}\r\n"]}